

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>宇行信</title>
  <subtitle>宇行信写文字的地方</subtitle>
  <updated>2022-07-05T17:40:26+08:00</updated>
  <author>
    <name>yuxingxin</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="zh-CN"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator>
  <rights> © 2022 yuxingxin </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>基于Hacker News的内容热度推荐算法</title>
    <link href="http://localhost:4000/posts/recommendation-algorithm/" rel="alternate" type="text/html" title="基于Hacker News的内容热度推荐算法" />
    <published>2019-03-10T00:00:00+08:00</published>
  
    <updated>2019-03-10T00:00:00+08:00</updated>
  
    <id>http://localhost:4000/posts/recommendation-algorithm/</id>
    <content src="http://localhost:4000/posts/recommendation-algorithm/" />
    <author>
      <name>yuxingxin</name>
    </author>

  
    
    <category term="Algorithm" />
    
  

  
    <summary>
      





      ### 前言
近期公司产品需要做一个内容推荐的功能，但限于人员和能力有限，经过调研，确定了一个简单相对我们可以实现的方案。一篇文章产生，随着用户浏览、点赞、分享、收藏、评论，热度逐渐攀升，进入榜单到推荐页面，但随着时间的推移，这篇文章也不能永久的霸占榜单，让后面新产生的文章没有机会到推荐页，因此也就有了时间衰减的因素，从而可以让榜单能够动态的变化，除了上面基本的原理以外，还需要人为干预因素，通过加权或者降权的方式来影响排名。

#### 因子

1. 用户活跃度（以积分的形式）
2. 浏览量
3. 点赞数
4. 收藏数
5. 评论数
6. 分享数
7. 时间衰减
8. 平台编辑推荐（人为因素介入干预）

#### 基本原理

![img1](https://pic1.zhimg.com/80/v2-5807f2036274e5d082dc5cb2b83742d4_hd.png)

#...
    </summary>
  

  </entry>

  
  <entry>
    <title>关于Code Review的一些思考总结</title>
    <link href="http://localhost:4000/posts/code-review/" rel="alternate" type="text/html" title="关于Code Review的一些思考总结" />
    <published>2018-06-17T00:00:00+08:00</published>
  
    <updated>2018-06-17T00:00:00+08:00</updated>
  
    <id>http://localhost:4000/posts/code-review/</id>
    <content src="http://localhost:4000/posts/code-review/" />
    <author>
      <name>yuxingxin</name>
    </author>

  
    
    <category term="CodeStyle" />
    
  

  
    <summary>
      





      ## Code Review

- 提高代码质量
- 提前发现bug
- 统一代码规范
- 提高团队成员代码技能

总之，前期找问题（代码规范、潜在缺陷、BUG，代码设计等等），后期演变成开发者技术交流和员工成长

### 如何开展

- 代码规范：**明确Coding规则**
- 检视清单：**结合业务特点，check重点**
- 总结优化：**透明问题，持续优化**
- 激励措施：**激发主观能动性**

### 开展方式

- **强制&amp;非强制**
- **线上交流（小组review）&amp;线下会议（团队review）**
- **小片段&amp;大模块**
- **发布前&amp;发布后**
- **高频率&amp;低频率**

### 阻力因素

1. 领导或者团队骨干不认同
2. 为了疲于应付
3. 以**需求多，没时间**做为偷懒借口

### 组织类型

- 小组内review，通常是模块负责人...
    </summary>
  

  </entry>

  
  <entry>
    <title>关于fastlane已存在的证书复用问题</title>
    <link href="http://localhost:4000/posts/fastlane-reuse-certs/" rel="alternate" type="text/html" title="关于fastlane已存在的证书复用问题" />
    <published>2018-01-10T00:00:00+08:00</published>
  
    <updated>2018-01-10T00:00:00+08:00</updated>
  
    <id>http://localhost:4000/posts/fastlane-reuse-certs/</id>
    <content src="http://localhost:4000/posts/fastlane-reuse-certs/" />
    <author>
      <name>yuxingxin</name>
    </author>

  
    
    <category term="iOS" />
    
  

  
    <summary>
      





      ### 前言
iOS开发在团队项目协作中，面临着许许多的挑战，除了被大家诟病的nib文件和故事板以外，还有就是今天要说的证书管理问题，相信做过iOS开发的用户对fastlane已经不陌生了，它提供了很多有用的功能来帮助开发者从繁琐的重复性劳动中解脱出来，这里列举出一些：
![](https://ws3.sinaimg.cn/large/006tNc79ly1fnbcmq6spkj30to0sbtag.jpg)
* deliver: 上传截图, 元数据, app应用程序到App Store
* supply: 上传Android app应用程序和元数据到Google Play
* snapshot: 自动捕获iOS app应用程序本地截图
* screengrab: 自动捕获Android app应用程序本地截图
* frameit: 快速截屏并将截屏放入设备中
* pem: 自动生成...
    </summary>
  

  </entry>

  
  <entry>
    <title>Git使用过程中的一些常见场景问题总结</title>
    <link href="http://localhost:4000/posts/git-scenes/" rel="alternate" type="text/html" title="Git使用过程中的一些常见场景问题总结" />
    <published>2017-12-11T00:00:00+08:00</published>
  
    <updated>2017-12-11T00:00:00+08:00</updated>
  
    <id>http://localhost:4000/posts/git-scenes/</id>
    <content src="http://localhost:4000/posts/git-scenes/" />
    <author>
      <name>yuxingxin</name>
    </author>

  
    
    <category term="Tools" />
    
  

  
    <summary>
      





      之前在公司内部推Git，写了一份[git使用教程](https://devops.yuxingxin.com)，后来又在团队内部做了一次分享，内容是关于Git使用过程中经常会遇到的一些场景，并有了这份总结。

### git基础

基于feature的工作流

- 添加忽略文件   .gitignore (http://gitignore.io/)
- 基于develop分支开发：feature分支   bugfix分支   版本节点tag
- 问题排查: diff 、log  、reflog、blame
- 撤销操作: checkout  、reset、revert、commit --amend
- 删除操作: rm  clean
- 储藏操作: stash
- 分支操作：创建、删除（注意远程分支的删除）、切换、合并（--no-ff 、rebase）
- 标签操作

更多详细查看上...
    </summary>
  

  </entry>

  
  <entry>
    <title>Android Studio 和Gradle Plugin 3.0 迁移不完全指南</title>
    <link href="http://localhost:4000/posts/migrate-android-studio-3-guide/" rel="alternate" type="text/html" title="Android Studio 和Gradle Plugin 3.0 迁移不完全指南" />
    <published>2017-11-03T00:00:00+08:00</published>
  
    <updated>2017-11-03T00:00:00+08:00</updated>
  
    <id>http://localhost:4000/posts/migrate-android-studio-3-guide/</id>
    <content src="http://localhost:4000/posts/migrate-android-studio-3-guide/" />
    <author>
      <name>yuxingxin</name>
    </author>

  
    
    <category term="Android" />
    
  

  
    <summary>
      





      Android Studio 3.0 默认Gradle版本为4.1，如果你需要手动升级版本的话，记得修改gradle/wrapper/gradle-wrapper.properties文件的URL地址：

```
distributionUrl=https\://services.gradle.org/distributions/gradle-4.1-all.zip
```

对应的Gradle插件版本为3.0.0，手动修改的话，需要修改项目级的build.gradle文件：

```
buildscript {
    repositories {
        ...
        // You need to add the following repository to download the
        // new plugin.
        google(...
    </summary>
  

  </entry>

</feed>


